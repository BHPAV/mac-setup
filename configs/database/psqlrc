-- PostgreSQL Client Configuration
-- ~/.psqlrc

-- Don't display the "helpful" message on startup.
\set QUIET 1

-- Set prompts
-- %M = full host name
-- %m = host name up to first dot
-- %> = port number
-- %n = database session user name
-- %/ = current database
-- %R = prompt type (normal, single quote, double quote)
-- %# = '#' if superuser, '>' otherwise
-- %x = transaction status

-- Color codes:
-- %[%033[1;33m%] = yellow
-- %[%033[1;32m%] = green
-- %[%033[0m%] = reset color

\set PROMPT1 '%[%033[1;33m%]%n%[%033[0m%]@%[%033[1;32m%]%m%[%033[0m%]:%[%033[1;33m%]%>%[%033[0m%]/%[%033[1;36m%]%/%[%033[0m%]%R%# '
\set PROMPT2 '%[%033[1;33m%]%n%[%033[0m%]@%[%033[1;32m%]%m%[%033[0m%]:%[%033[1;33m%]%>%[%033[0m%]/%[%033[1;36m%]%/%[%033[0m%]%R%# '

-- Show how long each query takes to execute
\timing on

-- Use best available output format
\x auto

-- Verbose error reports
\set VERBOSITY verbose

-- Use table format (not expanded) by default
\pset format aligned

-- Null display
\pset null 'Â¤'

-- Border style
\pset border 2

-- Line style
\pset linestyle unicode

-- Unicode border characters
\pset unicode_border_linestyle single
\pset unicode_column_linestyle single
\pset unicode_header_linestyle double

-- Pager
\setenv PAGER 'less -S'
\setenv LESS '-iMSx4 -FXR'
\pset pager always

-- History file per database
\set HISTFILE ~/.psql_history-:DBNAME

-- History size
\set HISTSIZE 10000

-- Don't save duplicate commands
\set HISTCONTROL ignoredups

-- Autocomplete keywords in uppercase
\set COMP_KEYWORD_CASE upper

-- Encoding
\encoding UTF8

-- Shortcuts
-- Administrative queries
\set version 'SELECT version();'
\set extensions 'SELECT * FROM pg_available_extensions ORDER BY name;'
\set settings 'SELECT name, setting, unit, context FROM pg_settings;'
\set conninfo 'SELECT usename, application_name, client_addr, client_hostname, client_port, backend_start, state FROM pg_stat_activity;'
\set activity 'SELECT datname, pid, usename, application_name, client_addr, client_hostname, client_port, query, state, wait_event_type, wait_event FROM pg_stat_activity WHERE state != ''idle'' ORDER BY query_start DESC;'
\set waits 'SELECT pid, usename, application_name, client_addr, wait_event_type, wait_event, state, query FROM pg_stat_activity WHERE wait_event IS NOT NULL AND state != ''idle'' ORDER BY pid;'
\set dbsize 'SELECT datname, pg_size_pretty(pg_database_size(datname)) AS size FROM pg_database ORDER BY pg_database_size(datname) DESC;'
\set tablesize 'SELECT schemaname, tablename, pg_size_pretty(pg_total_relation_size(schemaname||''.''||tablename)) AS size FROM pg_tables ORDER BY pg_total_relation_size(schemaname||''.''||tablename) DESC;'
\set locks 'SELECT pid, locktype, mode, granted, wait_event_type, wait_event, query FROM pg_locks JOIN pg_stat_activity USING (pid) WHERE granted = false ORDER BY pid;'
\set cache_hit 'SELECT ''index hit rate'' AS name, (sum(idx_blks_hit)) / nullif(sum(idx_blks_hit + idx_blks_read),0) AS ratio FROM pg_statio_user_indexes UNION ALL SELECT ''table hit rate'' AS name, sum(heap_blks_hit) / nullif(sum(heap_blks_hit) + sum(heap_blks_read),0) AS ratio FROM pg_statio_user_tables;'
\set slow_queries 'SELECT query, calls, mean_exec_time, min_exec_time, max_exec_time FROM pg_stat_statements WHERE mean_exec_time > 1000 ORDER BY mean_exec_time DESC LIMIT 20;'

-- Table analysis shortcuts
\set indexes 'SELECT schemaname, tablename, indexname, pg_size_pretty(pg_relation_size(indexrelid)) AS size FROM pg_stat_user_indexes ORDER BY pg_relation_size(indexrelid) DESC;'
\set unused_indexes 'SELECT schemaname, tablename, indexname, idx_scan FROM pg_stat_user_indexes WHERE idx_scan = 0 ORDER BY schemaname, tablename;'
\set seq_scans 'SELECT schemaname, tablename, seq_scan, seq_tup_read, idx_scan, idx_tup_fetch FROM pg_stat_user_tables WHERE seq_scan > 0 ORDER BY seq_tup_read DESC;'
\set total_index_size 'SELECT pg_size_pretty(sum(pg_relation_size(indexrelid))) AS total_size FROM pg_stat_user_indexes;'
\set bloat 'SELECT schemaname, tablename, pg_size_pretty(pg_total_relation_size(schemaname||''.''||tablename)) AS total_size, pg_size_pretty(pg_relation_size(schemaname||''.''||tablename)) AS table_size, pg_size_pretty(pg_total_relation_size(schemaname||''.''||tablename) - pg_relation_size(schemaname||''.''||tablename)) AS bloat_size FROM pg_tables ORDER BY pg_total_relation_size(schemaname||''.''||tablename) - pg_relation_size(schemaname||''.''||tablename) DESC;'

-- Development helpers
\set clear '\\! clear'
\set ll '\\! ls -lrt'
\set vim '\\! vim'

-- Shortcuts usage
\echo 'Administrative queries:'
\echo '\t:version\t-- Server version'
\echo '\t:extensions\t-- Available extensions'
\echo '\t:settings\t-- Server settings'
\echo '\t:conninfo\t-- Connection info'
\echo '\t:activity\t-- Active queries'
\echo '\t:waits\t\t-- Waiting queries'
\echo '\t:dbsize\t\t-- Database sizes'
\echo '\t:tablesize\t-- Table sizes'
\echo '\t:locks\t\t-- Lock info'
\echo '\t:cache_hit\t-- Cache hit rates'
\echo '\t:slow_queries\t-- Slow queries (requires pg_stat_statements)'
\echo ''
\echo 'Table analysis:'
\echo '\t:indexes\t-- Index list'
\echo '\t:unused_indexes\t-- Unused indexes'
\echo '\t:seq_scans\t-- Sequential scans'
\echo '\t:total_index_size -- Total index size'
\echo '\t:bloat\t\t-- Table bloat'
\echo ''
\echo 'Development:'
\echo '\t:clear\t\t-- Clear screen'
\echo '\t:ll\t\t-- List files'
\echo '\t:vim\t\t-- Open vim'

-- Turn off quiet mode
\unset QUIET
